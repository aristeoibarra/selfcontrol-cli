#!/bin/bash

# SelfControl CLI Functions
# Usage: Source this file in your shell profile

# Project directory
SELFCONTROL_DIR="$(dirname "$0")"

# Remove any existing aliases that might conflict
unalias sc-info 2>/dev/null
unalias sc-start 2>/dev/null
unalias sc-status 2>/dev/null

# Basic alias for sc command
alias sc='/Applications/SelfControl.app/Contents/MacOS/SelfControl-CLI'

# Enhanced status function
sc-status() {
    local status_output=$(sudo /Applications/SelfControl.app/Contents/MacOS/SelfControl-CLI is-running 2>&1)
    
    if echo "$status_output" | grep -q "YES"; then
        # Get quick info when active
        local raw_info=$(sudo /Applications/SelfControl.app/Contents/MacOS/SelfControl-CLI print-settings 2>/dev/null)
        local end_date_utc=$(echo "$raw_info" | grep "BlockEndDate" | sed 's/.*"\([^"]*\)".*/\1/')
        
        echo "🔒 SelfControl: ACTIVE"
        
        if [[ -n "$end_date_utc" ]]; then
            local end_timestamp=$(date -j -f "%Y-%m-%d %H:%M:%S %z" "$end_date_utc" "+%s" 2>/dev/null)
            local now_timestamp=$(date "+%s")
            
            if [[ -n "$end_timestamp" && "$end_timestamp" -gt "$now_timestamp" ]]; then
                local remaining_seconds=$((end_timestamp - now_timestamp))
                local hours=$((remaining_seconds / 3600))
                local minutes=$(((remaining_seconds % 3600) / 60))
                echo "⏳ Time left: ${hours}h ${minutes}m"
            fi
        fi
    else
        echo "✅ SelfControl: INACTIVE"
        echo "💡 Ready to start a new block"
    fi
}

# Help function
sc-help() {
    echo "🛠️  SelfControl CLI Commands"
    echo ""
    echo "📊 Status & Information:"
    echo "   sc-status          Quick status and time remaining"
    echo "   sc-info            Detailed information about active block"
    echo ""
    echo "🚀 Block Management:"
    echo "   sc-start [hours]   Start a new block (default: 2 hours)"
    echo "                      Example: sc-start 4"
    echo ""
    echo "🔧 Utility:"
    echo "   sc                 Direct access to SelfControl CLI"
    echo "   sc-help            Show this help message"
    echo ""
    echo "📝 Examples:"
    echo "   sc-start           # Block for 2 hours (default)"
    echo "   sc-start 1         # Block for 1 hour"
    echo "   sc-start 6         # Block for 6 hours"
    echo "   sc-status          # Quick status check"
    echo "   sc-info            # Detailed block information"
    echo ""
    echo "📄 Configuration:"
    echo "   Blocklist file: $SELFCONTROL_DIR/blocklist.selfcontrol"
    echo "   Functions file: $SELFCONTROL_DIR/selfcontrol_functions"
    echo ""
    echo "💡 Tips:"
    echo "   • Create your blocklist using SelfControl app first"
    echo "   • Save it as 'blocklist.selfcontrol' in the SelfControl CLI directory"
    echo "   • Blocks cannot be stopped once started (by design)"
}

# Enhanced info function
sc-info() {
    # Get raw info
    local raw_info=$(sudo /Applications/SelfControl.app/Contents/MacOS/SelfControl-CLI print-settings 2>&1)
    
    # Debug: check if we got any data
    if [[ -z "$raw_info" ]]; then
        echo "❌ Could not retrieve SelfControl information"
        return 1
    fi
    
    # Check if block is running - look for BlockIsRunning = 1
    if echo "$raw_info" | grep -q "BlockIsRunning.*1"; then
        echo "🔒 SelfControl Status: ACTIVE"
        echo ""
        
        # Extract and format blocked sites
        echo "🚫 Blocked Sites:"
        echo "$raw_info" | sed -n '/ActiveBlocklist/,/)/p' | grep '"' | sed 's/.*"\(.*\)".*/   • \1/'
        echo ""
        
        # Extract end date
        local end_date_utc=$(echo "$raw_info" | grep "BlockEndDate" | sed 's/.*"\([^"]*\)".*/\1/')
        if [[ -n "$end_date_utc" ]]; then
            echo "⏰ Block ends: $end_date_utc"
            
            # Try to calculate remaining time
            local end_timestamp=$(date -j -f "%Y-%m-%d %H:%M:%S %z" "$end_date_utc" "+%s" 2>/dev/null)
            local now_timestamp=$(date "+%s")
            
            if [[ -n "$end_timestamp" && "$end_timestamp" -gt "$now_timestamp" ]]; then
                local remaining_seconds=$((end_timestamp - now_timestamp))
                local hours=$((remaining_seconds / 3600))
                local minutes=$(((remaining_seconds % 3600) / 60))
                echo "⏳ Time remaining: ${hours}h ${minutes}m"
            fi
        fi
        
        # Show block type
        if echo "$raw_info" | grep -q "ActiveBlockAsWhitelist.*1"; then
            echo "📋 Mode: Whitelist (only listed sites allowed)"
        else
            echo "📋 Mode: Blacklist (listed sites blocked)"
        fi
        
    else
        echo "✅ SelfControl Status: INACTIVE"
        echo "💡 Use 'sc-start' to begin a new block"
    fi
}

# Smart start function
sc-start() {
    # Check if already active
    local block_output=$(sudo /Applications/SelfControl.app/Contents/MacOS/SelfControl-CLI is-running 2>&1)
    
    if echo "$block_output" | grep -q "YES"; then
        echo "❌ SelfControl is already active"
        echo "ℹ️  For details: sc-info"
        return 1
    fi
    
    # If not active, proceed to create block
    local hours=${1:-2}  # Default 2 hours
    local blocklist="$SELFCONTROL_DIR/blocklist.selfcontrol"
    
    # Check if blocklist file exists
    if [ ! -f "$blocklist" ]; then
        echo "❌ Blocklist file not found: $blocklist"
        echo "💡 Create your list from SelfControl app and save it there"
        return 1
    fi
    
    local end_date=$(date -u -v+${hours}H '+%Y-%m-%dT%H:%M:%SZ')
    
    echo "🚀 Starting block for $hours hour(s)..."
    echo "⏰ Will end at: $(date -j -f '%Y-%m-%dT%H:%M:%SZ' "$end_date" '+%I:%M %p')"
    
    sudo /Applications/SelfControl.app/Contents/MacOS/SelfControl-CLI start \
        --blocklist "$blocklist" \
        --enddate "$end_date"
    
    if [ $? -eq 0 ]; then
        echo "✅ Block activated successfully"
    else
        echo "❌ Error activating block"
    fi
}
